// Code generated by MockGen. DO NOT EDIT.
// Source: ../settings/settings.go

// Package mock_settings is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockISettings is a mock of ISettings interface
type MockISettings struct {
	ctrl     *gomock.Controller
	recorder *MockISettingsMockRecorder
}

// MockISettingsMockRecorder is the mock recorder for MockISettings
type MockISettingsMockRecorder struct {
	mock *MockISettings
}

// NewMockISettings creates a new mock instance
func NewMockISettings(ctrl *gomock.Controller) *MockISettings {
	mock := &MockISettings{ctrl: ctrl}
	mock.recorder = &MockISettingsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockISettings) EXPECT() *MockISettingsMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockISettings) Get(key, fallback string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key, fallback)
	ret0, _ := ret[0].(string)
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockISettingsMockRecorder) Get(key, fallback interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockISettings)(nil).Get), key, fallback)
}

// GetBool mocks base method
func (m *MockISettings) GetBool(key string, fallback bool) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBool", key, fallback)
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetBool indicates an expected call of GetBool
func (mr *MockISettingsMockRecorder) GetBool(key, fallback interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBool", reflect.TypeOf((*MockISettings)(nil).GetBool), key, fallback)
}
